AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  My CDK Project Stack converted to SAM template

Globals:
  Function:
    Timeout: 5
    MemorySize: 128
    Runtime: python3.9

Parameters:
  EnvType:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod

Resources:
  S3CopyLambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: s3-copy-lambda-layer
      ContentUri: layer/
      CompatibleRuntimes:
        - python3.9

  S3CopyLambdaFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3CopyLambdaFunctionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:CopyObject
                Resource:
                  - !Sub "arn:aws:s3:::s3-copy-source-bucket-${EnvType}/*"
                  - !Sub "arn:aws:s3:::s3-copy-target-bucket-${EnvType}/*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: 
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/s3-copy-lambda*:*"

  S3CopyLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: s3copy.handler
      Layers:
        - !Ref S3CopyLambdaLayer
      FunctionName: !Sub "s3-copy-lambda-${EnvType}"
      Role: !GetAtt S3CopyLambdaFunctionRole.Arn
      Environment:
        Variables:
          TARGET_BUCKET: !Sub "s3-copy-target-bucket-${EnvType}"

  S3CopyLambda2Function:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: handler/
      Handler: s3copy.handler
      Layers:
        - !Ref S3CopyLambdaLayer
      FunctionName: !Sub "s3-copy-lambda2-${EnvType}"
      Role: !GetAtt S3CopyLambdaFunctionRole.Arn
      Environment:
        Variables:
          TARGET_BUCKET: !Sub "s3-copy-target-bucket-${EnvType}"
